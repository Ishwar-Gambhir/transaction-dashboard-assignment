{"ast":null,"code":"var _jsxFileName = \"E:\\\\FS\\\\frontend\\\\src\\\\components\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart, ArcElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\n//import { Line } from 'react-chartjs-2';  // Example using Line chart, can be any type of chart\n\n// Register necessary components (ArcElement, LinearScale, Tooltip, Legend, CategoryScale)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst BarChart = ({\n  selectedMonth\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchBarChartData = async () => {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/api/bar-chart\", {\n        params: {\n          month: selectedMonth\n        }\n      });\n      setChartData(data);\n    };\n    fetchBarChartData();\n  }, [selectedMonth]);\n  const data = {\n    labels: chartData.map(d => d.range),\n    datasets: [{\n      label: \"Items Count\",\n      data: chartData.map(d => d.count),\n      backgroundColor: \"rgba(75,192,192,0.6)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(BarChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","Chart","ArcElement","CategoryScale","LinearScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","BarChart","selectedMonth","_s","chartData","setChartData","fetchBarChartData","data","get","params","month","labels","map","d","range","datasets","label","count","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/FS/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Chart, ArcElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\r\n//import { Line } from 'react-chartjs-2';  // Example using Line chart, can be any type of chart\r\n\r\n// Register necessary components (ArcElement, LinearScale, Tooltip, Legend, CategoryScale)\r\nChart.register(ArcElement, CategoryScale, LinearScale, Tooltip, Legend);\r\nconst BarChart = ({ selectedMonth }) => {\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchBarChartData = async () => {\r\n            const { data } = await axios.get(\"http://localhost:5000/api/bar-chart\", {\r\n                params: { month: selectedMonth },\r\n            });\r\n            setChartData(data);\r\n        };\r\n        fetchBarChartData();\r\n    }, [selectedMonth]);\r\n\r\n    const data = {\r\n        labels: chartData.map((d) => d.range),\r\n        datasets: [\r\n            {\r\n                label: \"Items Count\",\r\n                data: chartData.map((d) => d.count),\r\n                backgroundColor: \"rgba(75,192,192,0.6)\",\r\n            },\r\n        ],\r\n    };\r\n\r\n    return <Bar data={data} />;\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACzF;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAP,KAAK,CAACQ,QAAQ,CAACP,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,CAAC;AACvE,MAAMI,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,qCAAqC,EAAE;QACpEC,MAAM,EAAE;UAAEC,KAAK,EAAER;QAAc;MACnC,CAAC,CAAC;MACFG,YAAY,CAACE,IAAI,CAAC;IACtB,CAAC;IACDD,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,MAAMK,IAAI,GAAG;IACTI,MAAM,EAAEP,SAAS,CAACQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC;IACrCC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,aAAa;MACpBT,IAAI,EAAEH,SAAS,CAACQ,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACI,KAAK,CAAC;MACnCC,eAAe,EAAE;IACrB,CAAC;EAET,CAAC;EAED,oBAAOnB,OAAA,CAACT,GAAG;IAACiB,IAAI,EAAEA;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9B,CAAC;AAACnB,EAAA,CAzBIF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}