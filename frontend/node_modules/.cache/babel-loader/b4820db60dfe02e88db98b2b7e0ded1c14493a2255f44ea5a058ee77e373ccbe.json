{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Bar}from\"react-chartjs-2\";import axios from\"axios\";import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from\"chart.js\";// Register necessary components for Bar chart\nimport{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const BarChart=_ref=>{let{selectedMonth}=_ref;const[chartData,setChartData]=useState([]);useEffect(()=>{const fetchBarChartData=async()=>{const{data}=await axios.get(\"http://localhost:5000/api/bar-chart\",{params:{month:selectedMonth}});setChartData(data);};fetchBarChartData();},[selectedMonth]);const data={labels:chartData.map(d=>d.range),datasets:[{label:\"Items Count\",data:chartData.map(d=>d.count),backgroundColor:\"rgba(75,192,192,0.6)\"}]};return/*#__PURE__*/_jsx(Bar,{data:data});};export default BarChart;","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","register","BarChart","_ref","selectedMonth","chartData","setChartData","fetchBarChartData","data","get","params","month","labels","map","d","range","datasets","label","count","backgroundColor"],"sources":["E:/FS/frontend/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register necessary components for Bar chart\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst BarChart = ({ selectedMonth }) => {\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchBarChartData = async () => {\r\n            const { data } = await axios.get(\"http://localhost:5000/api/bar-chart\", {\r\n                params: { month: selectedMonth },\r\n            });\r\n            setChartData(data);\r\n        };\r\n        fetchBarChartData();\r\n    }, [selectedMonth]);\r\n\r\n    const data = {\r\n        labels: chartData.map((d) => d.range),\r\n        datasets: [\r\n            {\r\n                label: \"Items Count\",\r\n                data: chartData.map((d) => d.count),\r\n                backgroundColor: \"rgba(75,192,192,0.6)\",\r\n            },\r\n        ],\r\n    };\r\n\r\n    return <Bar data={data} />;\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAEjB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACAR,OAAO,CAACS,QAAQ,CACdR,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,KAAM,CAAAI,QAAQ,CAAGC,IAAA,EAAuB,IAAtB,CAAEC,aAAc,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAE9CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAoB,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,qCAAqC,CAAE,CACpEC,MAAM,CAAE,CAAEC,KAAK,CAAEP,aAAc,CACnC,CAAC,CAAC,CACFE,YAAY,CAACE,IAAI,CAAC,CACtB,CAAC,CACDD,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,CAACH,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAI,IAAI,CAAG,CACTI,MAAM,CAAEP,SAAS,CAACQ,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACC,KAAK,CAAC,CACrCC,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,aAAa,CACpBT,IAAI,CAAEH,SAAS,CAACQ,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACI,KAAK,CAAC,CACnCC,eAAe,CAAE,sBACrB,CAAC,CAET,CAAC,CAED,mBAAOnB,IAAA,CAACX,GAAG,EAACmB,IAAI,CAAEA,IAAK,CAAE,CAAC,CAC9B,CAAC,CAED,cAAe,CAAAN,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}